<Preprocess> ::= <DirectiveList> ;
<DirectiveList> ::= <DirectiveList> <Directive> | null ;
<Directive> ::= "#" ;// 直接忽略
<Directive> ::= "#" "define" ;
<Directive> ::= "#" "undef" ;
<Directive> ::= "#" "if" <Expression> ;
<Directive> ::= "#" "ifdef" ;
<Directive> ::= "#" "ifndef" ;
<Directive> ::= "#" "else" ;
<Directive> ::= "#" "elif" <Expression> ;
<Directive> ::= "#" "endif" ;
<Directive> ::= "#" "error" ;
<Directive> ::= "#" "pragma" ;
<Directive> ::= "#" "extension" ;
<Directive> ::= "#" "version" ;
<Directive> ::= "#" "line" ;
//
<Expression> ::= <logical_or_expression> ;
<variable_identifier> ::= identifier ;
<primary_expression> ::= <variable_identifier> ;
<primary_expression> ::= number ;
<primary_expression> ::= <BOOLCONSTANT> ;
<primary_expression> ::= "(" <Expression> ")" ;
<BOOLCONSTANT> ::= "true" ;
<BOOLCONSTANT> ::= "false" ;
<unary_expression> ::= <primary_expression> ;
<unary_expression> ::= <unary_operator> <unary_expression> ;
<unary_operator> ::= "+" ;
<unary_operator> ::= "-" ;
<unary_operator> ::= "!" ;
<unary_operator> ::= "~" ;
<multiplicative_expression> ::= <unary_expression> ;
<multiplicative_expression> ::= <multiplicative_expression> "*" <unary_expression> ;
<multiplicative_expression> ::= <multiplicative_expression> "/" <unary_expression> ;
<multiplicative_expression> ::= <multiplicative_expression> "%" <unary_expression> ;
<additive_expression> ::= <multiplicative_expression> ;
<additive_expression> ::= <additive_expression> "+" <multiplicative_expression> ;
<additive_expression> ::= <additive_expression> "-" <multiplicative_expression> ;
<shift_expression> ::= <additive_expression> ;
<shift_expression> ::= <shift_expression> "<<" <additive_expression> ;
<shift_expression> ::= <shift_expression> ">>" <additive_expression> ;
<relational_expression> ::= <shift_expression> ;
<relational_expression> ::= <relational_expression> "<" <shift_expression> ;
<relational_expression> ::= <relational_expression> ">" <shift_expression> ;
<relational_expression> ::= <relational_expression> "<=" <shift_expression> ;
<relational_expression> ::= <relational_expression> ">=" <shift_expression> ;
<equality_expression> ::= <relational_expression> ;
<equality_expression> ::= <equality_expression> "==" <relational_expression> ;
<equality_expression> ::= <equality_expression> "!=" <relational_expression> ;
<and_expression> ::= <equality_expression> ;
<and_expression> ::= <and_expression> "&" <equality_expression> ;
<exclusive_or_expression> ::= <and_expression> ;
<exclusive_or_expression> ::= <exclusive_or_expression> "^" <and_expression> ;
<inclusive_or_expression> ::= <exclusive_or_expression> ;
<inclusive_or_expression> ::= <inclusive_or_expression> "|" <exclusive_or_expression> ;
<logical_and_expression> ::= <inclusive_or_expression> ;
<logical_and_expression> ::= <logical_and_expression> "&&" <inclusive_or_expression> ;
<logical_xor_expression> ::= <logical_and_expression> ;
<logical_xor_expression> ::= <logical_xor_expression> "^^" <logical_and_expression> ;
<logical_or_expression> ::= <logical_xor_expression> ;
<logical_or_expression> ::= <logical_or_expression> "||" <logical_xor_expression> ;


