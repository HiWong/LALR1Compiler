<statement> ::= <MatchedIfElse> ;
<statement> ::= <UnmatchedIfElse> ;
<MatchedIfElse> ::= "if" "(" <expression> ")" <MatchedIfElse> "else" <MatchedIfElse> ;
<MatchedIfElse> ::= <other_statement> ;
<UnmatchedIfElse> ::= "if" "(" <expression> ")" <statement> ;
<UnmatchedIfElse> ::= "if" "(" <expression> ")" <MatchedIfElse> "else" <UnmatchedIfElse> ;

<other_statement> ::= <compound_statement> ;
<other_statement> ::= <declaration_statement> ;
<other_statement> ::= <expression_statement> ;
<other_statement> ::= <switch_statement> ;
<other_statement> ::= <case_label> ;
<other_statement> ::= <iteration_statement> ;
<other_statement> ::= <jump_statement> ;


<compound_statement> ::= "{" "}" ;
<compound_statement> ::= "{" <statement_list> "}" ;
<statement_list> ::= <statement> ;
<statement_list> ::= <statement_list> <statement> ;

<declaration_statement> ::= <declaration> ;
<declaration> ::= "declaration" ;

<expression_statement> ::= ";" ;
<expression_statement> ::= <expression> ";" ;

<switch_statement> ::= "switch" "(" <expression> ")" "{" <switch_statement_list> "}" ;
<switch_statement_list> ::= <statement_list> ;

<case_label> ::= "case" <expression> ":" ;
<case_label> ::= "default" ":" ;

<iteration_statement> ::= "while" "(" <condition> ")" <statement> ;
<condition> ::= <expression> ;



<jump_statement> ::= "continue" ";" ;
<jump_statement> ::= "break" ";" ;
<jump_statement> ::= "return" ";" ;
<jump_statement> ::= "return" <expression> ";" ;
<jump_statement> ::= "discard" ";" ;


<expression> ::= "expression" ;